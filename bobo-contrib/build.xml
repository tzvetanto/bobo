<?xml version="1.0"?>
<project name="bobo-contrib" basedir="." default="dist">

  <property name="src.dir" value="src" />
  <property name="lucene-patch.src.dir" value="lucene-patch" />
  <property name="target.dir" value="target" />
  <property name="revision" value="0.1" />
  <property name="git.revision" value="300" />
  <property name="jar.name" value="bobo-contrib" />
  <property name="lucene-patch.jar.name" value="lucene-patch" />
  <property name="jar.name.append" value="-${revision}.${git.revision}" />

  <property name="test.dir" value="test" />
  <property name="test.src.dir" value="test" />
  <property name="test.report.dir" value="${target.dir}/${test.dir}/report" />
  <property name="test.html.dir" value="${target.dir}/${test.dir}/html" />
  <property name="logs" value="logs" />

  <property name="default-test-suite" value="unit" />
  <property name="test.max.memory" value="150m" />
  <property name="test.forkmode" value="once" />
  <property name="test.resources.dir" value="test-resources" />
  <property name="default.encoding" value="UTF-8" />
  <property name="target.test.classes" value="${target.dir}/${test.dir}/classes" />

  <path id="bobo-contrib-classpath">
<!--
     <dirset dir="${target.dir}">
        <include name="lucene-patch-classes"/>
      </dirset>
-->
    <fileset dir="${target.dir}">
      <include name="${lucene-patch.jar.name}${jar.name.append}.jar" />
    </fileset>
    <fileset dir="lib">
      <include name="*.jar" />
    </fileset>
    <fileset dir="../lib/master">
      <include name="*.jar" />
    </fileset>
  </path>
  
  <path id="test.classpath">
    <path refid="bobo-contrib-classpath"/>
    <fileset dir="../lib/test">
      <include name="*.jar" />
    </fileset>
    <fileset dir="${target.dir}">
      <include name="${jar.name}${jar.name.append}.jar"/>
    </fileset>
    <!-- ${target.dir}/${test.dir}/${test.dir}-${jar.name}.jar -->
    <fileset dir="${target.dir}/${test.dir}">
      <include name="${test.dir}-${jar.name}.jar" />
    </fileset>
  </path>

  <target name="clean">
    <delete dir="${target.dir}" />
  </target>

  <target name="init" description="sets up the build">
    <mkdir dir="${target.dir}" />
    <mkdir dir="${target.dir}/classes" />
    <mkdir dir="${target.dir}/lucene-patch-classes" />
    <mkdir dir="${target.dir}/${test.dir}" />
  </target>

  <target name="lucene-patch-build" depends="init" description="builds the lucene indexing patch">
    <javac destdir="${target.dir}/lucene-patch-classes" source="1.6" debug="true" deprecation="false" optimize="false" failonerror="true" debuglevel="lines,vars,source" excludes="${build.e
xcludes}">
                <src path="${lucene-patch.src.dir}" />
                <classpath refid="bobo-contrib-classpath" />
        </javac>

  </target>

  <target name="lucene-patch-dist" depends="lucene-patch-build" description="jars the lucene indexing patch">
                 <manifest file="MANIFEST.MF">
                        <attribute name="Revision" value="${revision}"/>
                                <attribute name="Implementation-Version" value="${git.revision}"/>
                  </manifest>
        <jar destfile="${target.dir}/${lucene-patch.jar.name}${jar.name.append}.jar" basedir="${target.dir}/lucene-patch-classes" manifest="MANIFEST.MF"/>

  </target>

  <target name="build" depends="lucene-patch-dist" description="builds the class files for bobo-contrib">
        <javac destdir="${target.dir}/classes" source="1.6" target="1.6" debug="true" deprecation="false" optimize="false" failonerror="true" debuglevel="lines,vars,source" excludes="${build.excludes}">
                <src path="${src.dir}" />
                <classpath refid="bobo-contrib-classpath" />
        </javac>
  </target>
  
  <!-- test target needs some work -->
  <target name="buildtests" description="Compile test tree java files">
		<mkdir dir="${target.test.classes}" />
		<javac srcdir="${test.src.dir}" destdir="${target.test.classes}" source="1.6" target="1.6" debug="true" deprecation="false" optimize="false" failonerror="true" encoding="${default.encoding}">
			<classpath refid="test.classpath" />
		</javac>
		<echo message="test.resources.dir = ${test.resources.dir}"/>
		<copy todir="${target.test.classes}">
			<fileset dir="${test.resources.dir}">
				<include name="*.xml" />
				<include name="log4j.properties" />
			</fileset>
		</copy>
  </target>
  
  <target name="disttest" depends="buildtests" description="Generates the test jar file">
		<jar destfile="${target.dir}/${test.dir}/${test.dir}-${jar.name}.jar" basedir="${target.test.classes}" />
  </target>
    
  <target name="test" depends="dist,disttest">
    <mkdir dir="${target.dir}/${test.dir}/test-report" />
      
    <property name="test-suite" value="${default-test-suite}" />

	<echo>
	  **** Running test suite: ${test-suite} ****
    </echo>
    
    <property name="include.pattern" value="**/*Test.*" />
      
    <junit printsummary="withOutAndErr" fork="true" forkmode="${test.forkmode}"
			maxmemory="${test.max.memory}" haltonfailure="false" failureproperty="tests.failed"
			showoutput="true">
			<sysproperty key="test-suite" value="${test-suite}" />

			<classpath refid="test.classpath" />

			<formatter type="xml" />
			<batchtest todir="${target.dir}/${test.dir}/test-report">
				<fileset dir="${target.test.classes}">
					<include name="${include.pattern}" />
				</fileset>
			</batchtest>
		</junit>

		<junitreport todir="${target.dir}/${test.dir}/test-report">
			<fileset dir="${target.dir}/${test.dir}/test-report">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="noframes" todir="${target.dir}/${test.dir}/test-report" />
		</junitreport>
      
  </target>

  <target name="dist" depends="build" description="generates the jar file">
    		 <manifest file="MANIFEST.MF">
		        <attribute name="Revision" value="${revision}"/>
				<attribute name="Implementation-Version" value="${git.revision}"/>
		  </manifest>
        <jar destfile="${target.dir}/${jar.name}${jar.name.append}.jar" basedir="${target.dir}/classes" manifest="MANIFEST.MF"/>
  </target>

</project>

